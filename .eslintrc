{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks"
  ],
  "rules": {
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".tsx"
        ]
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/no-explicit-any": [
      "error"
    ],
    "@typescript-eslint/no-non-null-assertion": [
      "error"
    ],
    "@typescript-eslint/no-unused-vars": [
      "error", { "varsIgnorePattern": "^_$", "argsIgnorePattern": "^_$" }
    ],    
    "@typescript-eslint/no-empty-interface": [
      "error"
    ],
    "@typescript-eslint/no-inferrable-types": [
      "error"
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error"
    ],
    "max-len": [
      "warn",
      {
        "code": 120
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "import/prefer-default-export": "off",
    "react/function-component-definition": [
      2,
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "no-unused-vars": ["error", { "varsIgnorePattern": "^_$", "argsIgnorePattern": "^_$" }]
  },
  "overrides": [
    {
      "files": [
        "**/*.ts",
        "**/*.tsx"
      ],
      "rules": {
        "jsx-a11y/control-has-associated-label:": 0,
      }
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}